review everything before going to main (understand if it is good to break up some stuff into more functions)!
structure solver into:

initialize, setup, add_to_diagonal (over-write a current solver), solve, destroy

For implicit diffusion:
(1) initialize (once)
(2) setup without diagonal (once)
(3) change diagonal (new asolver, save the old one with) (every substep)
(4) solve
(5) destroy this this new asolver (but keep the old one!) (every substep)

ADD BCs a la phase change code! :)
IF IMPLICIT DIFFUSION and not periodic determine q which is equal to 1 where bound(ijk,nb) is true and zero elsewhere. Then do hi = hi-q (e.g.) q = [0,1,0] for right bound when we are solving Helmholtz for v

need to change hi(:) when calling:
  (1) init_solver, (2) setup_sovler, (3) solve, (4) updt_rhs_b

check in CaNS why the BC for Neumann is changing sign depending on the size of the boundary!
